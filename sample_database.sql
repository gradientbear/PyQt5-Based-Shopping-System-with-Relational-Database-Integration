-- MySQL Script generated by MySQL Workbench
-- Sat Dec 26 08:44:47 2021
-- Model: New Model Version: 1.0
-- MySQL Workbench Forward Engineering

SET sql_safe_updates=0; -- https://bobcares.com/blog/mysql-workbench-error-code-1175/

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- Solution for 1822 ERROR:https://www.w3schools.com/sql/sql_create_index.asp
-- By adding an index in the missing tables the error is resolved

-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Schema NUElectronics
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DROP SCHEMA IF EXISTS `NUElectronics` ;

-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Schema NUElectronics
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `NUElectronics` DEFAULT CHARACTER SET utf8 ;
USE `NUElectronics` ;

-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Table `NUElectronics`.`Customer`
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE `NUElectronics`.`Customer` (
  `customer_id` INT NOT NULL,
  `customer_address_id` INT NOT NULL,
  `customername` VARCHAR(45) NOT NULL,
  `customer_pass` VARCHAR(45) NOT NULL,
  `customer_email` VARCHAR(45) NOT NULL,
  `customer_phn` VARCHAR(45) NOT NULL,
  `date_bec_cust` DATE NOT NULL,
  `CanCheckOut` VARCHAR(3) NOT NULL DEFAULT "YES",
  `PaymentBalance` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`customer_id`),
  INDEX `customername_idx` (`customername` ASC) VISIBLE,
  INDEX `CUSS_ADD_idx` (`customer_address_id` ASC) VISIBLE,
  CONSTRAINT `CUSS_ADD`
    FOREIGN KEY (`customer_address_id`)
    REFERENCES `NUElectronics`.`Addresses` (`address_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
INSERT INTO `NUElectronics`.`Customer` (`customer_id`, `customer_address_id`, `customername`, `customer_pass`, `customer_email`, `customer_phn`, `date_bec_cust`,`CanCheckOut`,`PaymentBalance`) VALUES ('1', '1', 'mohamed', 'Test', 'mohamed@gem.com', '012xxxxxxxxxx', '2018-09-25','YES','0');
INSERT INTO `NUElectronics`.`Customer` (`customer_id`, `customer_address_id`, `customername`, `customer_pass`, `customer_email`, `customer_phn`, `date_bec_cust`,`CanCheckOut`,`PaymentBalance`) VALUES ('2', '2', 'Hamdy', 'trial', 'hamdy@gem.com', '012xxxxxxxx', '2018-09-26','NO','1000');

-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Table `NUElectronics`.`Addresses`
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE `NUElectronics`.`Addresses` (
  `address_id` INT NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `Governrate/State` VARCHAR(45) NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  `Postal_Code` VARCHAR(45) NULL,
  `Zip_Code` VARCHAR(45) NULL,
  PRIMARY KEY (`address_id`),
  UNIQUE INDEX `address_id_UNIQUE` (`address_id` ASC) VISIBLE);
  INSERT INTO `NUElectronics`.`Addresses` VALUES
    (1,'6th October','Giza','Egypt',null,null),
    (2,'mohandeseen','Giza','Egypt',null,null);
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Table `NUElectronics`.`Suppliers`
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE `NUElectronics`.`Suppliers` (
  `supplier_id` INT NOT NULL,
  `supplier_add_id` INT NOT NULL,
  `supplier_name` VARCHAR(45) NOT NULL,
  `contact_name` VARCHAR(45) NOT NULL,
  `supplier_phn` VARCHAR(45) NOT NULL,
  `supplier_email` VARCHAR(45) NOT NULL,
  `other_details` VARCHAR(45) NULL,
  PRIMARY KEY (`supplier_id`),
  UNIQUE INDEX `supplier_name_UNIQUE` (`supplier_name` ASC) VISIBLE,
  INDEX `Supp_Address_idx` (`supplier_add_id` ASC) VISIBLE,
  CONSTRAINT `Supp_Address`
    FOREIGN KEY (`supplier_add_id`)
    REFERENCES `NUElectronics`.`Addresses` (`address_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
INSERT INTO `NUElectronics`.`Suppliers` (`supplier_id`, `supplier_add_id`, `supplier_name`, `contact_name`, `supplier_phn`, `supplier_email`) VALUES ('1', '1', 'alhassan', 'ahmed', '0122xxxxxxxx', 'alhassan@ok.com');
INSERT INTO `NUElectronics`.`Suppliers` (`supplier_id`, `supplier_add_id`, `supplier_name`, `contact_name`, `supplier_phn`, `supplier_email`) VALUES ('2', '2', 'xenx', 'hema', '0122xxxxxxxx', 'xenx@ok.com');

-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Table `NUElectronics`.`PRODUCT`
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE `NUElectronics`.`PRODUCT` (
  `PRODUCT_ID` INT NOT NULL,
  `product_type` VARCHAR(150) NOT NULL,
  `supplier_id` INT NOT NULL,
  `prod_name` VARCHAR(100) NOT NULL,
  `QuantityInStock` INT NOT NULL,
  `prod_price` DOUBLE NOT NULL,
  `prod_desc` VARCHAR(100) NULL,
  `prod_Cond` VARCHAR(100) NOT NULL DEFAULT "New", -- Referbished, New or Unreternable r7 = x[7]
  `Pay_Me_METH` VARCHAR(60) NOT NULL,
  `Pro_Reternability` VARCHAR(100) NOT NULL DEFAULT "Not Sold",
  `prod_SoldDate` DATE NULL,
  `prod_ReturnDate` DATE NULL,
  `Diffrence_IN_Date` INT NOT NULL DEFAULT 0,
  `other_details` VARCHAR(100) NULL, -- r13
  PRIMARY KEY (`PRODUCT_ID`),
  UNIQUE INDEX `PRODUCT_ID_UNIQUE` (`PRODUCT_ID` ASC) VISIBLE,
  INDEX `prod_name_idx` (`prod_name` ASC) VISIBLE,
  INDEX `prod_price_idx` (`prod_price` ASC) VISIBLE,
  INDEX `suppliers_fk_idx` (`supplier_id` ASC) VISIBLE,
  INDEX `ProdType_idx` (`product_type` ASC) VISIBLE,
  INDEX `PaymentMeth_idx` (`Pay_Me_METH` ASC) VISIBLE,
  CONSTRAINT `suppliers_fk`
    FOREIGN KEY (`supplier_id`)
    REFERENCES `NUElectronics`.`Suppliers` (`supplier_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ProdType`
    FOREIGN KEY (`product_type`)
    REFERENCES `NUElectronics`.`ProductCatagory` (`ProductCatagory`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `PaymentMeth`
    FOREIGN KEY (`Pay_Me_METH`)
    REFERENCES `NUElectronics`.`Payment_Meth`  (`PaymeMETH`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

INSERT INTO `NUElectronics`.`PRODUCT` (`PRODUCT_ID`, `product_type`, `supplier_id`, `prod_name`, `QuantityInStock`, `prod_price`, `prod_Cond`, `Pay_Me_METH`, `Pro_Reternability`,`Diffrence_IN_Date`) VALUES ('1', 'Camera & Photo Products', '1', 'XLM HighDef Cam', '14', '1000', 'New', 'None', 'Not Sold',0);
INSERT INTO `NUElectronics`.`PRODUCT` (`PRODUCT_ID`, `product_type`, `supplier_id`, `prod_name`, `QuantityInStock`, `prod_price`, `prod_Cond`, `Pay_Me_METH`, `Pro_Reternability`,`Diffrence_IN_Date`) VALUES ('2', 'Camera & Photo Products', '1', 'SML QDef Camera', '5', '1500', 'New', 'None', 'Not Sold',0);
INSERT INTO `NUElectronics`.`PRODUCT` (`PRODUCT_ID`, `product_type`, `supplier_id`, `prod_name`, `QuantityInStock`, `prod_price`, `prod_Cond`, `Pay_Me_METH`, `Pro_Reternability`,`Diffrence_IN_Date`) VALUES ('3', 'Car & Vehicle Electronics', '2', 'Nissan Sunny', '5', '200000', 'New', 'None', 'Not Sold',0);
INSERT INTO `NUElectronics`.`PRODUCT` (`PRODUCT_ID`, `product_type`, `supplier_id`, `prod_name`, `QuantityInStock`, `prod_price`, `prod_Cond`, `Pay_Me_METH`, `Pro_Reternability`,`Diffrence_IN_Date`) VALUES ('4', 'Car & Vehicle Electronics', '2', 'Toyta Yaris', '2', '175000', 'New', 'None', 'Not Sold',0);

-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Table `NUElectronics`.`Payment_Meth` 
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DROP TABLE IF EXISTS `NUElectronics`.`Payment_Meth`  ;

CREATE TABLE IF NOT EXISTS `NUElectronics`.`Payment_Meth`  (
`PaymeMETH` VARCHAR(60) NOT NULL, -- installments or cash or None
PRIMARY KEY (`PaymeMETH`)
);
INSERT INTO `NUElectronics`.`Payment_Meth`  (`PaymeMETH`) VALUES ('installments');
INSERT INTO `NUElectronics`.`Payment_Meth`  (`PaymeMETH`) VALUES ('cash');
INSERT INTO `NUElectronics`.`Payment_Meth`  (`PaymeMETH`) VALUES ('None');


-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Table `NUElectronics`.`ProductCatagory`
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE `NUElectronics`.`ProductCatagory` (
  `ProductCatagory` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`ProductCatagory`),
  UNIQUE INDEX `ProductCatagory_UNIQUE` (`ProductCatagory` ASC) VISIBLE);
  
INSERT INTO `NUElectronics`.`ProductCatagory` (`ProductCatagory`) VALUES ('Camera & Photo Products');
INSERT INTO `NUElectronics`.`ProductCatagory` (`ProductCatagory`) VALUES ('Car & Vehicle Electronics');
INSERT INTO `NUElectronics`.`ProductCatagory` (`ProductCatagory`) VALUES ('Computers, Components & Accessories');
INSERT INTO `NUElectronics`.`ProductCatagory` (`ProductCatagory`) VALUES ('eBook Readers & Accessories');
INSERT INTO `NUElectronics`.`ProductCatagory` (`ProductCatagory`) VALUES ('Headphones, Earbuds & Accessories');
INSERT INTO `NUElectronics`.`ProductCatagory` (`ProductCatagory`) VALUES ('Home Audio & Theater Products');
INSERT INTO `NUElectronics`.`ProductCatagory` (`ProductCatagory`) VALUES ('Home Theater, TV & Video Products');
INSERT INTO `NUElectronics`.`ProductCatagory` (`ProductCatagory`) VALUES ('Household Batteries & Chargers');
INSERT INTO `NUElectronics`.`ProductCatagory` (`ProductCatagory`) VALUES ('Mobile Phones & Communication Products');
INSERT INTO `NUElectronics`.`ProductCatagory` (`ProductCatagory`) VALUES ('Portable Sound & Vision Products');
INSERT INTO `NUElectronics`.`ProductCatagory` (`ProductCatagory`) VALUES ('Electrical Power Accessories');
INSERT INTO `NUElectronics`.`ProductCatagory` (`ProductCatagory`) VALUES ('GPS & Navigation Equipment');
INSERT INTO `NUElectronics`.`ProductCatagory` (`ProductCatagory`) VALUES ('Computer Tablets');
INSERT INTO `NUElectronics`.`ProductCatagory` (`ProductCatagory`) VALUES ('Telephones, VoIP & Accessories');
INSERT INTO `NUElectronics`.`ProductCatagory` (`ProductCatagory`) VALUES ('Wearable Technology');

-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Table `NUElectronics`.`Employees`
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE `NUElectronics`.`Employees` (
  `employee_id` INT NOT NULL,
  `employee_address_id` INT NOT NULL,
  `employee_name` VARCHAR(45) NOT NULL,
  `employee_suppervisor` INT NOT NULL,
  `employee_department` VARCHAR(45) NOT NULL,
  `employee_pass` VARCHAR(45) NOT NULL,
  `employee_email` VARCHAR(100) NOT NULL,
  `employee_phone` VARCHAR(45) NOT NULL,
  `other_emp_details` VARCHAR(1000) NULL,
  PRIMARY KEY (`employee_id`),
  UNIQUE INDEX `employee_id_UNIQUE` (`employee_id` ASC) VISIBLE,
  INDEX `employee_name_idx` (`employee_name` ASC) VISIBLE);
  
ALTER TABLE `NUElectronics`.`Employees` 
ADD INDEX `Suppervisor_idx` (`employee_suppervisor` ASC) VISIBLE;
;
ALTER TABLE `NUElectronics`.`Employees` 
ADD CONSTRAINT `Suppervisor`
  FOREIGN KEY (`employee_suppervisor`)
  REFERENCES `NUElectronics`.`Employees` (`employee_id`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;
ALTER TABLE `NUElectronics`.`Employees` 
ADD INDEX `Department_idx` (`employee_department` ASC) VISIBLE;
;
ALTER TABLE `NUElectronics`.`Employees` 
ADD CONSTRAINT `Department`
  FOREIGN KEY (`employee_department`)
  REFERENCES `NUElectronics`.`DEPARTMENT` (`DEPARTMENT_NAME`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;
ALTER TABLE `NUElectronics`.`Employees` 
ADD INDEX `Adress_idx_idx` (`employee_address_id` ASC) VISIBLE;
;
ALTER TABLE `NUElectronics`.`Employees` 
ADD CONSTRAINT `Adress_idx`
  FOREIGN KEY (`employee_address_id`)
  REFERENCES `NUElectronics`.`Addresses` (`address_id`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

  
  INSERT INTO `NUElectronics`.`Employees` VALUES
    (1,1,'magid',1,'Admin','P@ss0rd','maged@xyz.com','020100xxxxxx','null'),
    (2,2,'ramzy',1,'Delivery','Hello','ramzy@xyz.com','02015xxxxxxx','null');
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Table `NUElectronics`.`Hourly_Employee`
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE `NUElectronics`.`Hourly_Employee` (
  `ID` INT NOT NULL,
  `HOURLY_RATE` FLOAT NULL,
  `EMP_ID` INT NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `EMP_ID_UNIQUE` (`EMP_ID` ASC) VISIBLE,
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC) VISIBLE,
  CONSTRAINT `EMPLOYEE_ID`
    FOREIGN KEY (`EMP_ID`)
    REFERENCES `NUElectronics`.`Employees` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
INSERT INTO `NUElectronics`.`Hourly_Employee` VALUES
    (1,20,1);
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Table `NUElectronics`.`Salaried_Employee`
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE `NUElectronics`.`Salaried_Employee` (
  `Salary_EMPLOYEE_ID` INT NOT NULL,
  `ANNUAL_SALARY` FLOAT NULL,
  `EMPLOYEE_ID` INT NOT NULL,
  PRIMARY KEY (`Salary_EMPLOYEE_ID`),
  UNIQUE INDEX `Salary_EMPLOYEE_ID_UNIQUE` (`Salary_EMPLOYEE_ID` ASC) VISIBLE,
  UNIQUE INDEX `EMPLOYEE_ID_UNIQUE` (`EMPLOYEE_ID` ASC) VISIBLE,
  CONSTRAINT `FK_EMPLOYEE`
    FOREIGN KEY (`EMPLOYEE_ID`)
    REFERENCES `NUElectronics`.`Employees` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
INSERT INTO `NUElectronics`.`Salaried_Employee` VALUES
    (1,70000,2);
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Table `NUElectronics`.`DEPARTMENT`
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE `NUElectronics`.`DEPARTMENT` (
  `DEPARTMENT_ID` INT NOT NULL,
  `DEPARTMENT_NAME` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`DEPARTMENT_ID`),
  UNIQUE INDEX `DEPARTMENT_ID_UNIQUE` (`DEPARTMENT_ID` ASC) VISIBLE,
  UNIQUE INDEX `DEPARTMENT_NAME_UNIQUE` (`DEPARTMENT_NAME` ASC) VISIBLE);
  
INSERT INTO `NUElectronics`.`DEPARTMENT` (`DEPARTMENT_ID`, `DEPARTMENT_NAME`) VALUES ('1', 'Delivery');
INSERT INTO `NUElectronics`.`DEPARTMENT` (`DEPARTMENT_ID`, `DEPARTMENT_NAME`) VALUES ('2', 'Admin');

-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Table `NUElectronics`.`INVOICE`
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE `NUElectronics`.`INVOICE` (
  `INV_ID` INT NOT NULL,
  `CUS_NAME` VARCHAR(45) NOT NULL,
  `PRODUCT_NAME` VARCHAR(100) NOT NULL,
  `PaymentInitial` DATE NOT NULL DEFAULT (CURRENT_DATE),
  `PaymentDateFinal` DATE NOT NULL,
  `PRICE` DOUBLE NOT NULL,
  `PAYMENT_METHOD` VARCHAR(60) NOT NULL,
  `PaymentFull` DOUBLE NOT NULL,
  `EMPLOYEE_NAME` VARCHAR(45) NOT NULL,
  `CanCheckOut` VARCHAR(3) NOT NULL DEFAULT "YES",
  `PaymentBalance` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`INV_ID`),
  INDEX `CUSOM_NAME_idx` (`CUS_NAME` ASC) VISIBLE,
  INDEX `PRODUCT_NAME_FK_idx` (`PRODUCT_NAME` ASC) VISIBLE,
  INDEX `PRICE_FK_idx` (`PRICE` ASC) VISIBLE,
  INDEX `PAYMENT_METH_FK_idx` (`PAYMENT_METHOD` ASC) VISIBLE,
  INDEX `EMPLOYEE_NAME_FK_idx` (`EMPLOYEE_NAME` ASC) VISIBLE,
  CONSTRAINT `CUSOM_NAME_FK`
    FOREIGN KEY (`CUS_NAME`)
    REFERENCES `NUElectronics`.`Customer` (`customername`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `PRODUCT_NAME_FK`
    FOREIGN KEY (`PRODUCT_NAME`)
    REFERENCES `NUElectronics`.`PRODUCT` (`prod_name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `PRICE_FK`
    FOREIGN KEY (`PRICE`)
    REFERENCES `NUElectronics`.`PRODUCT` (`prod_price`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `PAYMENT_METH_FK`
    FOREIGN KEY (`PAYMENT_METHOD`)
    REFERENCES `NUElectronics`.`Payment_Meth`  (`PaymeMETH`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `EMPLOYEE_NAME_FK`
    FOREIGN KEY (`EMPLOYEE_NAME`)
    REFERENCES `NUElectronics`.`Employees` (`employee_name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
ALTER TABLE `NUElectronics`.`INVOICE` 
DROP FOREIGN KEY `PRODUCT_NAME_FK`;
ALTER TABLE `NUElectronics`.`INVOICE` 
DROP INDEX `PRODUCT_NAME_FK_idx` ;
;
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Table `NUElectronics`.`inv_prod`
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE `NUElectronics`.`inv_prod` (
  `idInv_prod` INT NOT NULL,
  `ProductID` INT NOT NULL,
  `Inv_ID_b` INT NOT NULL,
  PRIMARY KEY (`idInv_prod`),
  INDEX `Product_id_fk_idx` (`ProductID` ASC) VISIBLE,
  INDEX `Inv_ID_b_fk_idx` (`Inv_ID_b` ASC) VISIBLE,
  CONSTRAINT `Product_id_fk`
    FOREIGN KEY (`ProductID`)
    REFERENCES `NUElectronics`.`PRODUCT` (`PRODUCT_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
CONSTRAINT `Inv_ID_b_fk_idx`
    FOREIGN KEY (`Inv_ID_b`)
    REFERENCES `NUElectronics`.`INVOICE` (`INV_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);



SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;